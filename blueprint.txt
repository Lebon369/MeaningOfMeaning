portal: 
	A post about something, it is a portal to the past. You can also call it an archive

PART ONE: SETTING UP CRUD OPERATIONS
--------

1. Creating the basic Express App
	1.1 Establishing the connection
	2.1 Creating and set the view engine as well as views directory and home.ejs file 
2. Creating the portal model basics
	2.1 Creating models directory and portal.js
3. Seeding portals
4. Portal index
5. Portal show
	5.1 create the show page
	5.2 Make each portalDocument from index.ejs a link to the show.ejs page by usind unique _id
6. Portal NEW and CREATE
	6.1 Creating the form that create and add a new portal document
	6.1.1 Creating the 'NEW' form as a GET request
	6.1.2 Creating the 'CREATE' route as a POST request
7. portal EDIT and UPDATE
	7.1 Using method-override to update a portal document
8. Portal DELETE
	8.1 Using method-override to delete a portal document

	PART TWO: BASIC STYLES
	--------
9. Installing MORGAN for looging information the incoming html requests
10. Installing and Using ejs-mate for styling
	10.1 Creating a boilerplate.ejs to centralize styling form all other .ejs files
11. Creating Navigation bar(Navbar.ejs) partial
12. Creating footer bar(footer.ejs) partial
13. Adding images
14. Styling portal document index
15. Styling the 'NEW' form

	PART THREE : ERRORS HANDLING & DATA VALIDATION
	----------
16. Client-side validation
17. catchAsyncError function 
18. expreeError class
19. error rendering(error.ejs)
20. Server-side validation with Joi

	PART FOUR: ADDING THE REVIEW MODEL
	----------
21. Defining the review model
22. Creating a one to one relationship between portal model to review model
23. Posting a review in app.js
24. Client-side review validation
25. Displaying reviews
26. Deleting reviews
27. DELETE Middleware for a whole portal document and its dependencies